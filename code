tihogallery.py
TOKEN = "–¢8158525377:AAGDiBQp3CoPUl4Bp0_CNlkITibmdpDbp5k"
ADMIN_ID = 246211279  # Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≥–∞–ª–µ—Ä–µ–∏

import asyncio
import gspread
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from oauth2client.service_account import ServiceAccountCredentials

TOKEN = "–¢8158525377:AAGDiBQp3CoPUl4Bp0_CNlkITibmdpDbp5k"
ADMIN_ID = 246211279  # Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≥–∞–ª–µ—Ä–µ–∏

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
SCOPE = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
CREDS = ServiceAccountCredentials.from_json_keyfile_name("google_credentials.json", SCOPE)
gs_client = gspread.authorize(CREDS)
SHEET = gs_client.open("Gallery_Requests").sheet1  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ Google Sheets

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (Reply-–∫–Ω–æ–ø–∫–∏)
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üõç –ö—É–ø–∏—Ç—å —Ä–∞–±–æ—Ç—É")],
        [KeyboardButton(text="üé® –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ")],
        [KeyboardButton(text="üìÖ –ê—Ñ–∏—à–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")],
        [KeyboardButton(text="üì≤ –°–æ—Ü—Å–µ—Ç–∏")]
    ], resize_keyboard=True
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command('start'))
async def start(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞—Ä—Ç-–≥–∞–ª–µ—Ä–µ—é –¢–∏—Ö–æ! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫—É–ø–∫–∏ —Ä–∞–±–æ—Ç—ã
@dp.message(lambda message: message.text == "üõç –ö—É–ø–∏—Ç—å —Ä–∞–±–æ—Ç—É")
async def buy_artwork(message: types.Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.")

@dp.message(lambda message: message.text.startswith("http"))
async def process_artwork_link(message: types.Message):
    text = f"üîî –ü–æ–∫—É–ø–∫–∞ —Ä–∞–±–æ—Ç—ã\nüë§ –ö–ª–∏–µ–Ω—Ç: {message.from_user.full_name}\nüîó –°—Å—ã–ª–∫–∞: {message.text}"
    await bot.send_message(ADMIN_ID, text)
    await message.answer("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.")
    SHEET.append_row([message.from_user.full_name, message.text, "–ü–æ–∫—É–ø–∫–∞ —Ä–∞–±–æ—Ç—ã"])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞
@dp.message(lambda message: message.text == "üé® –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ")
async def collaboration(message: types.Message):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–Ø —Ö—É–¥–æ–∂–Ω–∏–∫", callback_data="collab_artist")],
            [InlineKeyboardButton(text="–Ø –¥–∏–∑–∞–π–Ω–µ—Ä", callback_data="collab_designer")],
            [InlineKeyboardButton(text="–ê—Ä–µ–Ω–¥–∞ –∑–∞–ª–∞", callback_data="collab_rent")],
            [InlineKeyboardButton(text="–î—Ä—É–≥–æ–µ", callback_data="collab_other")]
        ]
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Å—Ñ–µ—Ä—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:", reply_markup=keyboard)

@dp.callback_query(lambda c: c.data.startswith("collab_"))
async def process_collaboration(callback_query: types.CallbackQuery):
    user_type = callback_query.data.split("_")[1]
    await bot.send_message(ADMIN_ID, f"üë§ –ö–ª–∏–µ–Ω—Ç: {callback_query.from_user.full_name}\n–°—Ñ–µ—Ä–∞: {user_type}")
    SHEET.append_row([callback_query.from_user.full_name, user_type, "–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ"])
    await callback_query.message.answer("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
@dp.message(lambda message: message.document and message.document.mime_type in ["application/pdf", "image/png"])
async def handle_portfolio(message: types.Message):
    file_info = await bot.get_file(message.document.file_id)
    text = f"üìÇ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –æ—Ç {message.from_user.full_name}\n–§–∞–π–ª: {message.document.file_name}"
    await bot.send_message(ADMIN_ID, text)
    await bot.send_document(ADMIN_ID, message.document.file_id)
    SHEET.append_row([message.from_user.full_name, message.document.file_name, "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ"])
    await message.answer("–í–∞—à–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞—Ñ–∏—à–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
@dp.message(lambda message: message.text == "üìÖ –ê—Ñ–∏—à–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")
async def events(message: types.Message):
    await message.answer("–¢–µ–∫—É—â–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:\n1Ô∏è‚É£ –í—ã—Å—Ç–∞–≤–∫–∞ '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ'\nüìÖ –î–∞—Ç–∞: 10 –∏—é–Ω—è\nüîó –ë–∏–ª–µ—Ç—ã: https://example.com")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ü—Å–µ—Ç–µ–π
@dp.message(lambda message: message.text == "üì≤ –°–æ—Ü—Å–µ—Ç–∏")
async def social_links(message: types.Message):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üì∏ Instagram", url="https://instagram.com/gallery")],
            [InlineKeyboardButton(text="üì£ Telegram-–∫–∞–Ω–∞–ª", url="https://t.me/gallery_channel")]
        ]
    )
    await message.answer("–ù–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏:", reply_markup=keyboard)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
