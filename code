tihogallery.py
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor

TOKEN = "–¢8158525377:AAGDiBQp3CoPUl4Bp0_CNlkITibmdpDbp5k"
ADMIN_ID = 246211279  # Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≥–∞–ª–µ—Ä–µ–∏

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (Reply-–∫–Ω–æ–ø–∫–∏)
main_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
main_keyboard.add(KeyboardButton("üé® –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç"))
main_keyboard.add(KeyboardButton("üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"), KeyboardButton("ü§ù –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ"))
main_keyboard.add(KeyboardButton("‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"), KeyboardButton("üì≤ –°–æ—Ü—Å–µ—Ç–∏"))

# Inline-–∫–Ω–æ–ø–∫–∏
site_button = InlineKeyboardMarkup().add(InlineKeyboardButton("üåç –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="https://tihogallery.ru"))
review_button = InlineKeyboardMarkup().add(InlineKeyboardButton("‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", url="https://yandex.ru/maps/org/galereya_tikho/176880862431/reviews/?ll=37.643893%2C55.766800&tab=reviews&z=16.9"))
social_button = InlineKeyboardMarkup().add(InlineKeyboardButton("üì∏ Instagram", url="https://instagram.com/gallery"))

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞—Ä—Ç-–≥–∞–ª–µ—Ä–µ—é –¢–∏—Ö–æ! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_keyboard)

@dp.message_handler(lambda message: message.text == "üé® –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç")
async def go_to_site(message: types.Message):
    await message.answer("–ù–∞—à —Å–∞–π—Ç:", reply_markup=site_button)

@dp.message_handler(lambda message: message.text == "üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
async def booking(message: types.Message):
    text = "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –≥–∞–ª–µ—Ä–µ—é. –¶–µ–Ω—ã:\n- 1 —á–∞—Å ‚Äî 5000‚ÇΩ\n- 3 —á–∞—Å–∞ ‚Äî 12000‚ÇΩ\n\n–î–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∏—à–∏—Ç–µ @fucking_paradox"
    await message.answer(text)

@dp.message_handler(lambda message: message.text == "ü§ù –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ")
async def offer_collaboration(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–∏—Ö —Ä–∞–±–æ—Ç, –∏ –º—ã –∏—Ö —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º.")

@dp.message_handler(content_types=['photo'])
async def handle_photos(message: types.Message):
    await bot.forward_message(ADMIN_ID, message.chat.id, message.message_id)
    await message.answer("–í–∞—à–∏ —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.")

@dp.callback_query_handler(lambda c: c.data in ["accept", "decline"])
async def admin_reply(callback_query: types.CallbackQuery):
    user_id = callback_query.message.reply_to_message.forward_from.id
    if callback_query.data == "accept":
        await bot.send_message(user_id, "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! –ú—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.")
    else:
        await bot.send_message(user_id, "‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
    await callback_query.answer()

@dp.message_handler(lambda message: message.text == "‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
async def leave_review(message: types.Message):
    await message.answer("–û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö:", reply_markup=review_button)

@dp.message_handler(lambda message: message.text == "üì≤ –°–æ—Ü—Å–µ—Ç–∏")
async def social_links(message: types.Message):
    await message.answer("–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—Å:", reply_markup=social_button)

executor.start_polling(dp)
